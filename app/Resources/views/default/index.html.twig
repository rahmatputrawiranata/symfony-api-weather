{% extends 'base.html.twig' %}

{% block body %}
    <div id="wrapper">
        <div id="container">
            <div class="col-md-2">
            <div id="welcome">
                <h1><span>Check Your Current Weather</span> for Australian Post Codes</h1>
            </div>
            <div id="next">
                <div class="form-group col-md-12">
                    <label for="text-location">Location Name or Postcode <br />(e.g Sydney, Melbourne, 2000, 3000)</label>
                    <input type="text" class="form-control" id="text-location">
                </div>
            </div>
            <br><br>
            <button id="btn-search" class="btn btn-primary">Search Now</button>
            </div>
            <div class="col-md-10">
               <div id="map" class="map"></div>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
<style>
    body { background: #F5F5F5; font: 18px/1.5 sans-serif; }
    h1, h2 { line-height: 1.2; margin: 0 0 .5em; }
    h1 { font-size: 36px; }
    h2 { font-size: 21px; margin-bottom: 1em; }
    p { margin: 0 0 1em 0; }
    a { color: #0000F0; }
    a:hover { text-decoration: none; }
    code { background: #F5F5F5; max-width: 100px; padding: 2px 6px; word-wrap: break-word; }
    #wrapper { background: #FFF;}
    #welcome, #status { margin-bottom: 1em; }
    #welcome h1 span { display: block; font-size: 75%; }
    #icon-status, #icon-book { float: left; height: 64px; margin-right: 1em; margin-top: -4px; width: 64px; }
    #icon-book { display: none; }

    @media (min-width: 768px) {
        #icon-book { display: inline-block; }
        #status a, #next a { display: block; }

        @-webkit-keyframes fade-in { 0% { opacity: 0; } 100% { opacity: 1; } }
        @keyframes fade-in { 0% { opacity: 0; } 100% { opacity: 1; } }
        .sf-toolbar { opacity: 0; -webkit-animation: fade-in 1s .2s forwards; animation: fade-in 1s .2s forwards;}
    }

    .tt-query, /* UPDATE: newer versions use tt-input instead of tt-query */
.tt-hint {
    width: 396px;
    height: 30px;
    padding: 8px 12px;
    font-size: 24px;
    line-height: 30px;
    border: 2px solid #ccc;
    border-radius: 8px;
    outline: none;
}

.tt-query { /* UPDATE: newer versions use tt-input instead of tt-query */
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
}

.tt-hint {
    color: #999;
}

.tt-menu { /* UPDATE: newer versions use tt-menu instead of tt-dropdown-menu */
    width: 422px;
    margin-top: 12px;
    padding: 8px 0;
    background-color: #fff;
    border: 1px solid #ccc;
    border: 1px solid rgba(0, 0, 0, 0.2);
    border-radius: 8px;
    box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.tt-suggestion {
    padding: 3px 20px;
    font-size: 18px;
    line-height: 24px;
}

.tt-suggestion.tt-is-under-cursor { /* UPDATE: newer versions use .tt-suggestion.tt-cursor */
    color: #fff;
    background-color: #0097cf;

}

.tt-suggestion p {
    margin: 0;
}
</style>
{% endblock %}

{% block javascripts %}
    <script src="{{asset('assets/js/index.js')}}" async="false"></script>
    <script>
    //map feature
    var map = new ol.Map({
        target: 'map',
        interactions: ol.interaction.defaults({mouseWheelZoom:false}),
        layers: [
          new ol.layer.Tile({
            source: new ol.source.OSM()
          })
        ],
        view: new ol.View({
          center: ol.proj.fromLonLat([134.489563,-25.734968]), 
          zoom: 4 //Initial Zoom Level
        })
      });

      var marker = new ol.Feature({
          geometry: new ol.geom.Point(
            ol.proj.fromLonLat([134.489563,-25.734968])
          ),  // Cordinates of New York's Town Hall
        });
        var vectorSource = new ol.source.Vector({
          features: [marker]
        });
        var markerVectorLayer = new ol.layer.Vector({
          source: vectorSource,
        });
        map.addLayer(markerVectorLayer);

      //searchable

    document.getElementById("btn-search").addEventListener("click", function(e){
          	e.preventDefault();
            var name = document.getElementById("text-location").value;
            ajax_post('/api/weathermap', name,
                     function(data){
                    $('#text-location').typeahead({
                        source: JSON.parse(data)
                    });
                });

            });
    
    var result;

    $.ajax({
      type: "GET",
      url: 'api/location',
      datatype: "json",
      async: false,
      success: function(data){
        result = data;            
      }
    });

    var substringMatcher = function(strs) {
      return function findMatches(q, cb) {
        var matches, substringRegex;
        matches = [];
        substrRegex = new RegExp(q, 'i');
        $.each(strs, function(i, str) {
          if (substrRegex.test(str)) {
            matches.push(str);
          }
        });

        cb(matches);
      };
    };

       

    $('#text-location').typeahead({
      hint: true,
      highlight: true,
      minLength: 1
    },
    {
      name: 'states',
      source: substringMatcher(result)
        });
    </script>   
{% endblock %}
